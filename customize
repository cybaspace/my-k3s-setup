#! /bin/bash

## start with given parameters (silent mode):
##   create the first node
##     ./customize --silent <clustername>
##   create subsequent nodes
##     ./customize --silent <ip-first-node> <token-first-node>

silent=false
if [[ -n $1 && $1 == "--silent" ]]; then
  silent=true
  if [[ -n $3 ]]; then
    ip=$2
    token=$3
  else
    clustername=$2
  fi
fi

cp print-k3s-config /usr/bin/
chmod +x /usr/bin/print-k3s-config

### Create a meaningful user prompt
cat << EOT >> /etc/bash.bashrc

NORMAL="\[\e[0m\]"
RED="\[\e[1;31m\]"
GREEN="\[\e[1;32m\]"
if [[ \$EUID == 0 ]] ; then
  PS1="\$RED\u [ \$NORMAL\w\$RED ]# \$NORMAL"
else
  PS1="\$GREEN\u [ \$NORMAL\w\$GREEN ]\$ \$NORMAL"
fi

unset RED GREEN NORMAL
EOT

for f in ./users/*
do
  user="$(basename -- $f)"
  echo -e "\nCreating new user $user ..."
  
  useradd -m -G sudo --shell /bin/bash $user
  
  ### deactivate user prompt in users bashrc
  sed -i 's/\(.*PS1=\)/echo >\/dev\/null #\1/g' /home/$user/.bashrc
  
  ### put public key in users ssh dir
  mkdir /home/$user/.ssh
  chown $user:$user /home/$user/.ssh
  chmod 700 /home/$user/.ssh
  cp $f/authorized_keys /home/$user/.ssh/
  chown $user:$user /home/$user/.ssh/authorized_keys
  chmod 600 /home/$user/.ssh/authorized_keys
done

sed -i 's/%sudo	ALL=(ALL:ALL) ALL/%sudo ALL=(ALL) NOPASSWD:ALL/g' /etc/sudoers

sed -i 's/PermitRootLogin yes/PermitRootLogin no/g' /etc/ssh/sshd_config
sed -i 's/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config

systemctl restart sshd

echo -e "\nRoot login prohibited"

echo -e "\nCopy configs ...\n"
mkdir -p /etc/rancher/k3s/
cp ./config/k3s-config.yml /etc/rancher/k3s/config.yaml

if [ "$silent" = true ]; then
  if [[ -n $clustername ]]; then
    echo $clustername > /etc/rancher/k3s/clustername
    curl -sfL https://get.k3s.io | sh -s - server --cluster-init
  else
    curl -sfL https://get.k3s.io | K3S_TOKEN=$token sh -s - server --server https://$ip:6443
  fi
else
  echo
  read -p "Is this the first master node (yes/no) " yn
  case $yn in
    y|yes ) echo
            read -p "Insert name of the cluster " clustername
            echo
            curl -sfL https://get.k3s.io | sh -s - server --cluster-init
            token=`cat /var/lib/rancher/k3s/server/token`
            for i in $(hostname -i)
            do
              if [[ $i != 127* ]]
              then
                ip=$i
              fi
            done
            echo -e "\n\n### >>>\nexecute on other nodes:\ncurl -sfL https://get.k3s.io | K3S_TOKEN=$token sh -s - server --server https://$ip:6443\n### <<<"
            echo -e "\nInsert the following content to local file ~/.kube/config:\n### >>>"
            sed "s/default/$clustername/g" /etc/rancher/k3s/k3s.yaml  | sed "s/127.0.0.1/$ip/g"
            echo "### <<<";;
    *) echo -e "\n\nPlease execute command:\ncurl -sfL https://get.k3s.io | K3S_TOKEN=<token> sh -s - server --server https://<master-node-ip>:6443\n\n";;
  esac
fi
